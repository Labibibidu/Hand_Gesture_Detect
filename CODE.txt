import cv2
import mediapipe as mp
import time

cap = cv2.VideoCapture(1)
mpHands = mp.solutions.hands
hands = mpHands.Hands(min_detection_confidence=0.5, min_tracking_confidence=0.5)
mpDraw = mp.solutions.drawing_utils
handLmsStyle = mpDraw.DrawingSpec(color=(0, 0, 255), thickness=3)
handConStyle = mpDraw.DrawingSpec(color=(0, 255, 0), thickness=5)
pTime = 0
cTime = 0

gesture = ""  # 初始手勢為空

while True:
    ret, img = cap.read()
    if ret:
        imgRGB = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
        result = hands.process(imgRGB)

        imgHeight = img.shape[0]
        imgWidth = img.shape[1]

        if result.multi_hand_landmarks:
            for handLms in result.multi_hand_landmarks:
                mpDraw.draw_landmarks(img, handLms, mpHands.HAND_CONNECTIONS, handLmsStyle, handConStyle)

                landmarks = []
                for i, lm in enumerate(handLms.landmark):
                    xPos = int(lm.x * imgWidth)
                    yPos = int(lm.y * imgHeight)
                    landmarks.append([xPos, yPos])

                # 利用手部關鍵點坐標數據來辨識手勢
                if landmarks:
                    thumb = landmarks[4]
                    index = landmarks[8]
                    middle = landmarks[12]
                    ring = landmarks[16]
                    pinky = landmarks[20]                    

                    if thumb[0] < index[0]-30 and middle[1] < ring[1]:
                        gesture = "Fist"
                    elif thumb[0] > index[0]+30 and middle[1] < ring[1]:
                        gesture = "Spread"
                    elif thumb[0] < index[0]+30 and thumb[0] > index[0]-30 and middle[1] > ring[1]:
                        gesture = "Pinch"
                    else:
                        gesture = ""

                # 在視窗中顯示手勢結果
                cv2.putText(img, gesture, (50, 50), cv2.FONT_HERSHEY_SIMPLEX, 1, (255, 0, 0), 3)

        cTime = time.time()
        fps = 1/(cTime-pTime)
        pTime = cTime
        cv2.putText(img, f"FPS : {int(fps)}", (30, 100), cv2.FONT_HERSHEY_SIMPLEX, 1, (255, 0, 0), 3)

        cv2.imshow('img', img)

    if cv2.waitKey(1) == ord('q'):
        break
        
cap.release()
cv2.destroyAllWindows()